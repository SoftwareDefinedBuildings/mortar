/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.mdalgrpc.AggFunc', null, global);
goog.exportSymbol('proto.mdalgrpc.Aggregation', null, global);
goog.exportSymbol('proto.mdalgrpc.DataQueryRequest', null, global);
goog.exportSymbol('proto.mdalgrpc.DataQueryResponse', null, global);
goog.exportSymbol('proto.mdalgrpc.Row', null, global);
goog.exportSymbol('proto.mdalgrpc.TimeParams', null, global);
goog.exportSymbol('proto.mdalgrpc.VarMap', null, global);
goog.exportSymbol('proto.mdalgrpc.Variable', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mdalgrpc.DataQueryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mdalgrpc.DataQueryRequest.repeatedFields_, null);
};
goog.inherits(proto.mdalgrpc.DataQueryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mdalgrpc.DataQueryRequest.displayName = 'proto.mdalgrpc.DataQueryRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mdalgrpc.DataQueryRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mdalgrpc.DataQueryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mdalgrpc.DataQueryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mdalgrpc.DataQueryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdalgrpc.DataQueryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    compositionList: jspb.Message.getRepeatedField(msg, 1),
    aggregationMap: (f = msg.getAggregationMap()) ? f.toObject(includeInstance, proto.mdalgrpc.Aggregation.toObject) : [],
    variablesMap: (f = msg.getVariablesMap()) ? f.toObject(includeInstance, proto.mdalgrpc.Variable.toObject) : [],
    time: (f = msg.getTime()) && proto.mdalgrpc.TimeParams.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mdalgrpc.DataQueryRequest}
 */
proto.mdalgrpc.DataQueryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mdalgrpc.DataQueryRequest;
  return proto.mdalgrpc.DataQueryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mdalgrpc.DataQueryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mdalgrpc.DataQueryRequest}
 */
proto.mdalgrpc.DataQueryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addComposition(value);
      break;
    case 2:
      var value = msg.getAggregationMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.mdalgrpc.Aggregation.deserializeBinaryFromReader);
         });
      break;
    case 3:
      var value = msg.getVariablesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.mdalgrpc.Variable.deserializeBinaryFromReader);
         });
      break;
    case 4:
      var value = new proto.mdalgrpc.TimeParams;
      reader.readMessage(value,proto.mdalgrpc.TimeParams.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mdalgrpc.DataQueryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mdalgrpc.DataQueryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mdalgrpc.DataQueryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdalgrpc.DataQueryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompositionList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getAggregationMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.mdalgrpc.Aggregation.serializeBinaryToWriter);
  }
  f = message.getVariablesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.mdalgrpc.Variable.serializeBinaryToWriter);
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.mdalgrpc.TimeParams.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string composition = 1;
 * @return {!Array.<string>}
 */
proto.mdalgrpc.DataQueryRequest.prototype.getCompositionList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.mdalgrpc.DataQueryRequest.prototype.setCompositionList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.mdalgrpc.DataQueryRequest.prototype.addComposition = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.mdalgrpc.DataQueryRequest.prototype.clearCompositionList = function() {
  this.setCompositionList([]);
};


/**
 * map<string, Aggregation> aggregation = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.mdalgrpc.Aggregation>}
 */
proto.mdalgrpc.DataQueryRequest.prototype.getAggregationMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.mdalgrpc.Aggregation>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.mdalgrpc.Aggregation));
};


proto.mdalgrpc.DataQueryRequest.prototype.clearAggregationMap = function() {
  this.getAggregationMap().clear();
};


/**
 * map<string, Variable> variables = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.mdalgrpc.Variable>}
 */
proto.mdalgrpc.DataQueryRequest.prototype.getVariablesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.mdalgrpc.Variable>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.mdalgrpc.Variable));
};


proto.mdalgrpc.DataQueryRequest.prototype.clearVariablesMap = function() {
  this.getVariablesMap().clear();
};


/**
 * optional TimeParams time = 4;
 * @return {?proto.mdalgrpc.TimeParams}
 */
proto.mdalgrpc.DataQueryRequest.prototype.getTime = function() {
  return /** @type{?proto.mdalgrpc.TimeParams} */ (
    jspb.Message.getWrapperField(this, proto.mdalgrpc.TimeParams, 4));
};


/** @param {?proto.mdalgrpc.TimeParams|undefined} value */
proto.mdalgrpc.DataQueryRequest.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.mdalgrpc.DataQueryRequest.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mdalgrpc.DataQueryRequest.prototype.hasTime = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mdalgrpc.Variable = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mdalgrpc.Variable.repeatedFields_, null);
};
goog.inherits(proto.mdalgrpc.Variable, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mdalgrpc.Variable.displayName = 'proto.mdalgrpc.Variable';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mdalgrpc.Variable.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mdalgrpc.Variable.prototype.toObject = function(opt_includeInstance) {
  return proto.mdalgrpc.Variable.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mdalgrpc.Variable} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdalgrpc.Variable.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    definition: jspb.Message.getFieldWithDefault(msg, 2, ""),
    uuidsList: msg.getUuidsList_asB64(),
    units: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mdalgrpc.Variable}
 */
proto.mdalgrpc.Variable.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mdalgrpc.Variable;
  return proto.mdalgrpc.Variable.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mdalgrpc.Variable} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mdalgrpc.Variable}
 */
proto.mdalgrpc.Variable.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefinition(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addUuids(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mdalgrpc.Variable.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mdalgrpc.Variable.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mdalgrpc.Variable} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdalgrpc.Variable.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDefinition();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUuidsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
  f = message.getUnits();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.mdalgrpc.Variable.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mdalgrpc.Variable.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string definition = 2;
 * @return {string}
 */
proto.mdalgrpc.Variable.prototype.getDefinition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.mdalgrpc.Variable.prototype.setDefinition = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated bytes uuids = 3;
 * @return {!Array.<string>}
 */
proto.mdalgrpc.Variable.prototype.getUuidsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes uuids = 3;
 * This is a type-conversion wrapper around `getUuidsList()`
 * @return {!Array.<string>}
 */
proto.mdalgrpc.Variable.prototype.getUuidsList_asB64 = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.bytesListAsB64(
      this.getUuidsList()));
};


/**
 * repeated bytes uuids = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUuidsList()`
 * @return {!Array.<!Uint8Array>}
 */
proto.mdalgrpc.Variable.prototype.getUuidsList_asU8 = function() {
  return /** @type {!Array.<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getUuidsList()));
};


/** @param {!(Array<!Uint8Array>|Array<string>)} value */
proto.mdalgrpc.Variable.prototype.setUuidsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 */
proto.mdalgrpc.Variable.prototype.addUuids = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.mdalgrpc.Variable.prototype.clearUuidsList = function() {
  this.setUuidsList([]);
};


/**
 * optional string units = 4;
 * @return {string}
 */
proto.mdalgrpc.Variable.prototype.getUnits = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.mdalgrpc.Variable.prototype.setUnits = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mdalgrpc.TimeParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mdalgrpc.TimeParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mdalgrpc.TimeParams.displayName = 'proto.mdalgrpc.TimeParams';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mdalgrpc.TimeParams.prototype.toObject = function(opt_includeInstance) {
  return proto.mdalgrpc.TimeParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mdalgrpc.TimeParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdalgrpc.TimeParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: jspb.Message.getFieldWithDefault(msg, 1, ""),
    end: jspb.Message.getFieldWithDefault(msg, 2, ""),
    window: jspb.Message.getFieldWithDefault(msg, 3, ""),
    aligned: jspb.Message.getFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mdalgrpc.TimeParams}
 */
proto.mdalgrpc.TimeParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mdalgrpc.TimeParams;
  return proto.mdalgrpc.TimeParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mdalgrpc.TimeParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mdalgrpc.TimeParams}
 */
proto.mdalgrpc.TimeParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStart(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnd(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setWindow(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAligned(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mdalgrpc.TimeParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mdalgrpc.TimeParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mdalgrpc.TimeParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdalgrpc.TimeParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStart();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEnd();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getWindow();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAligned();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string start = 1;
 * @return {string}
 */
proto.mdalgrpc.TimeParams.prototype.getStart = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mdalgrpc.TimeParams.prototype.setStart = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string end = 2;
 * @return {string}
 */
proto.mdalgrpc.TimeParams.prototype.getEnd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.mdalgrpc.TimeParams.prototype.setEnd = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string window = 3;
 * @return {string}
 */
proto.mdalgrpc.TimeParams.prototype.getWindow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.mdalgrpc.TimeParams.prototype.setWindow = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool aligned = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.mdalgrpc.TimeParams.prototype.getAligned = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.mdalgrpc.TimeParams.prototype.setAligned = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mdalgrpc.Aggregation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mdalgrpc.Aggregation.repeatedFields_, null);
};
goog.inherits(proto.mdalgrpc.Aggregation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mdalgrpc.Aggregation.displayName = 'proto.mdalgrpc.Aggregation';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mdalgrpc.Aggregation.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mdalgrpc.Aggregation.prototype.toObject = function(opt_includeInstance) {
  return proto.mdalgrpc.Aggregation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mdalgrpc.Aggregation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdalgrpc.Aggregation.toObject = function(includeInstance, msg) {
  var f, obj = {
    funcsList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mdalgrpc.Aggregation}
 */
proto.mdalgrpc.Aggregation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mdalgrpc.Aggregation;
  return proto.mdalgrpc.Aggregation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mdalgrpc.Aggregation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mdalgrpc.Aggregation}
 */
proto.mdalgrpc.Aggregation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array.<!proto.mdalgrpc.AggFunc>} */ (reader.readPackedEnum());
      msg.setFuncsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mdalgrpc.Aggregation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mdalgrpc.Aggregation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mdalgrpc.Aggregation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdalgrpc.Aggregation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFuncsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
};


/**
 * repeated AggFunc funcs = 1;
 * @return {!Array.<!proto.mdalgrpc.AggFunc>}
 */
proto.mdalgrpc.Aggregation.prototype.getFuncsList = function() {
  return /** @type {!Array.<!proto.mdalgrpc.AggFunc>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<!proto.mdalgrpc.AggFunc>} value */
proto.mdalgrpc.Aggregation.prototype.setFuncsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.mdalgrpc.AggFunc} value
 * @param {number=} opt_index
 */
proto.mdalgrpc.Aggregation.prototype.addFuncs = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.mdalgrpc.Aggregation.prototype.clearFuncsList = function() {
  this.setFuncsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mdalgrpc.DataQueryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mdalgrpc.DataQueryResponse.repeatedFields_, null);
};
goog.inherits(proto.mdalgrpc.DataQueryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mdalgrpc.DataQueryResponse.displayName = 'proto.mdalgrpc.DataQueryResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mdalgrpc.DataQueryResponse.repeatedFields_ = [1,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mdalgrpc.DataQueryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mdalgrpc.DataQueryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mdalgrpc.DataQueryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdalgrpc.DataQueryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.mdalgrpc.Row.toObject, includeInstance),
    mappingMap: (f = msg.getMappingMap()) ? f.toObject(includeInstance, proto.mdalgrpc.VarMap.toObject) : [],
    contextList: jspb.Message.toObjectList(msg.getContextList(),
    proto.mdalgrpc.Row.toObject, includeInstance),
    uuidsList: msg.getUuidsList_asB64(),
    arrow: msg.getArrow_asB64(),
    error: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mdalgrpc.DataQueryResponse}
 */
proto.mdalgrpc.DataQueryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mdalgrpc.DataQueryResponse;
  return proto.mdalgrpc.DataQueryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mdalgrpc.DataQueryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mdalgrpc.DataQueryResponse}
 */
proto.mdalgrpc.DataQueryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mdalgrpc.Row;
      reader.readMessage(value,proto.mdalgrpc.Row.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    case 2:
      var value = msg.getMappingMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.mdalgrpc.VarMap.deserializeBinaryFromReader);
         });
      break;
    case 3:
      var value = new proto.mdalgrpc.Row;
      reader.readMessage(value,proto.mdalgrpc.Row.deserializeBinaryFromReader);
      msg.addContext(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addUuids(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setArrow(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mdalgrpc.DataQueryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mdalgrpc.DataQueryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mdalgrpc.DataQueryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdalgrpc.DataQueryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mdalgrpc.Row.serializeBinaryToWriter
    );
  }
  f = message.getMappingMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.mdalgrpc.VarMap.serializeBinaryToWriter);
  }
  f = message.getContextList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.mdalgrpc.Row.serializeBinaryToWriter
    );
  }
  f = message.getUuidsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      4,
      f
    );
  }
  f = message.getArrow_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * repeated Row rows = 1;
 * @return {!Array.<!proto.mdalgrpc.Row>}
 */
proto.mdalgrpc.DataQueryResponse.prototype.getRowsList = function() {
  return /** @type{!Array.<!proto.mdalgrpc.Row>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mdalgrpc.Row, 1));
};


/** @param {!Array.<!proto.mdalgrpc.Row>} value */
proto.mdalgrpc.DataQueryResponse.prototype.setRowsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mdalgrpc.Row=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mdalgrpc.Row}
 */
proto.mdalgrpc.DataQueryResponse.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mdalgrpc.Row, opt_index);
};


proto.mdalgrpc.DataQueryResponse.prototype.clearRowsList = function() {
  this.setRowsList([]);
};


/**
 * map<string, VarMap> mapping = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.mdalgrpc.VarMap>}
 */
proto.mdalgrpc.DataQueryResponse.prototype.getMappingMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.mdalgrpc.VarMap>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.mdalgrpc.VarMap));
};


proto.mdalgrpc.DataQueryResponse.prototype.clearMappingMap = function() {
  this.getMappingMap().clear();
};


/**
 * repeated Row context = 3;
 * @return {!Array.<!proto.mdalgrpc.Row>}
 */
proto.mdalgrpc.DataQueryResponse.prototype.getContextList = function() {
  return /** @type{!Array.<!proto.mdalgrpc.Row>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mdalgrpc.Row, 3));
};


/** @param {!Array.<!proto.mdalgrpc.Row>} value */
proto.mdalgrpc.DataQueryResponse.prototype.setContextList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.mdalgrpc.Row=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mdalgrpc.Row}
 */
proto.mdalgrpc.DataQueryResponse.prototype.addContext = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.mdalgrpc.Row, opt_index);
};


proto.mdalgrpc.DataQueryResponse.prototype.clearContextList = function() {
  this.setContextList([]);
};


/**
 * repeated bytes uuids = 4;
 * @return {!Array.<string>}
 */
proto.mdalgrpc.DataQueryResponse.prototype.getUuidsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * repeated bytes uuids = 4;
 * This is a type-conversion wrapper around `getUuidsList()`
 * @return {!Array.<string>}
 */
proto.mdalgrpc.DataQueryResponse.prototype.getUuidsList_asB64 = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.bytesListAsB64(
      this.getUuidsList()));
};


/**
 * repeated bytes uuids = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUuidsList()`
 * @return {!Array.<!Uint8Array>}
 */
proto.mdalgrpc.DataQueryResponse.prototype.getUuidsList_asU8 = function() {
  return /** @type {!Array.<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getUuidsList()));
};


/** @param {!(Array<!Uint8Array>|Array<string>)} value */
proto.mdalgrpc.DataQueryResponse.prototype.setUuidsList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 */
proto.mdalgrpc.DataQueryResponse.prototype.addUuids = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.mdalgrpc.DataQueryResponse.prototype.clearUuidsList = function() {
  this.setUuidsList([]);
};


/**
 * optional bytes arrow = 5;
 * @return {string}
 */
proto.mdalgrpc.DataQueryResponse.prototype.getArrow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes arrow = 5;
 * This is a type-conversion wrapper around `getArrow()`
 * @return {string}
 */
proto.mdalgrpc.DataQueryResponse.prototype.getArrow_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getArrow()));
};


/**
 * optional bytes arrow = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getArrow()`
 * @return {!Uint8Array}
 */
proto.mdalgrpc.DataQueryResponse.prototype.getArrow_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getArrow()));
};


/** @param {!(string|Uint8Array)} value */
proto.mdalgrpc.DataQueryResponse.prototype.setArrow = function(value) {
  jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional string error = 6;
 * @return {string}
 */
proto.mdalgrpc.DataQueryResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.mdalgrpc.DataQueryResponse.prototype.setError = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mdalgrpc.Row = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mdalgrpc.Row, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mdalgrpc.Row.displayName = 'proto.mdalgrpc.Row';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mdalgrpc.Row.prototype.toObject = function(opt_includeInstance) {
  return proto.mdalgrpc.Row.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mdalgrpc.Row} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdalgrpc.Row.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: msg.getUuid_asB64(),
    rowMap: (f = msg.getRowMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mdalgrpc.Row}
 */
proto.mdalgrpc.Row.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mdalgrpc.Row;
  return proto.mdalgrpc.Row.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mdalgrpc.Row} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mdalgrpc.Row}
 */
proto.mdalgrpc.Row.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setUuid(value);
      break;
    case 2:
      var value = msg.getRowMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mdalgrpc.Row.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mdalgrpc.Row.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mdalgrpc.Row} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdalgrpc.Row.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getRowMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional bytes uuid = 1;
 * @return {string}
 */
proto.mdalgrpc.Row.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes uuid = 1;
 * This is a type-conversion wrapper around `getUuid()`
 * @return {string}
 */
proto.mdalgrpc.Row.prototype.getUuid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getUuid()));
};


/**
 * optional bytes uuid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUuid()`
 * @return {!Uint8Array}
 */
proto.mdalgrpc.Row.prototype.getUuid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getUuid()));
};


/** @param {!(string|Uint8Array)} value */
proto.mdalgrpc.Row.prototype.setUuid = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * map<string, string> row = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.mdalgrpc.Row.prototype.getRowMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


proto.mdalgrpc.Row.prototype.clearRowMap = function() {
  this.getRowMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mdalgrpc.VarMap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mdalgrpc.VarMap.repeatedFields_, null);
};
goog.inherits(proto.mdalgrpc.VarMap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mdalgrpc.VarMap.displayName = 'proto.mdalgrpc.VarMap';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mdalgrpc.VarMap.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mdalgrpc.VarMap.prototype.toObject = function(opt_includeInstance) {
  return proto.mdalgrpc.VarMap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mdalgrpc.VarMap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdalgrpc.VarMap.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuidsList: msg.getUuidsList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mdalgrpc.VarMap}
 */
proto.mdalgrpc.VarMap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mdalgrpc.VarMap;
  return proto.mdalgrpc.VarMap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mdalgrpc.VarMap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mdalgrpc.VarMap}
 */
proto.mdalgrpc.VarMap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addUuids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mdalgrpc.VarMap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mdalgrpc.VarMap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mdalgrpc.VarMap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mdalgrpc.VarMap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuidsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
};


/**
 * repeated bytes uuids = 1;
 * @return {!Array.<string>}
 */
proto.mdalgrpc.VarMap.prototype.getUuidsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes uuids = 1;
 * This is a type-conversion wrapper around `getUuidsList()`
 * @return {!Array.<string>}
 */
proto.mdalgrpc.VarMap.prototype.getUuidsList_asB64 = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.bytesListAsB64(
      this.getUuidsList()));
};


/**
 * repeated bytes uuids = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUuidsList()`
 * @return {!Array.<!Uint8Array>}
 */
proto.mdalgrpc.VarMap.prototype.getUuidsList_asU8 = function() {
  return /** @type {!Array.<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getUuidsList()));
};


/** @param {!(Array<!Uint8Array>|Array<string>)} value */
proto.mdalgrpc.VarMap.prototype.setUuidsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 */
proto.mdalgrpc.VarMap.prototype.addUuids = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.mdalgrpc.VarMap.prototype.clearUuidsList = function() {
  this.setUuidsList([]);
};


/**
 * @enum {number}
 */
proto.mdalgrpc.AggFunc = {
  RAW: 0,
  MEAN: 1,
  MIN: 2,
  MAX: 3,
  COUNT: 4,
  SUM: 5
};

goog.object.extend(exports, proto.mdalgrpc);
