// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mortar.proto

package mortarpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AggFunc int32

const (
	AggFunc_AGG_FUNC_INVALID AggFunc = 0
	AggFunc_AGG_FUNC_RAW     AggFunc = 1
	AggFunc_AGG_FUNC_MEAN    AggFunc = 2
	AggFunc_AGG_FUNC_MIN     AggFunc = 3
	AggFunc_AGG_FUNC_MAX     AggFunc = 4
	AggFunc_AGG_FUNC_COUNT   AggFunc = 5
	AggFunc_AGG_FUNC_SUM     AggFunc = 6
)

var AggFunc_name = map[int32]string{
	0: "AGG_FUNC_INVALID",
	1: "AGG_FUNC_RAW",
	2: "AGG_FUNC_MEAN",
	3: "AGG_FUNC_MIN",
	4: "AGG_FUNC_MAX",
	5: "AGG_FUNC_COUNT",
	6: "AGG_FUNC_SUM",
}
var AggFunc_value = map[string]int32{
	"AGG_FUNC_INVALID": 0,
	"AGG_FUNC_RAW":     1,
	"AGG_FUNC_MEAN":    2,
	"AGG_FUNC_MIN":     3,
	"AGG_FUNC_MAX":     4,
	"AGG_FUNC_COUNT":   5,
	"AGG_FUNC_SUM":     6,
}

func (x AggFunc) String() string {
	return proto.EnumName(AggFunc_name, int32(x))
}
func (AggFunc) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_mortar_b530059dc25ca2c1, []int{0}
}

type QualifyRequest struct {
	// all of these queries must return a response for the site to be considered
	// qualified
	Required []string `protobuf:"bytes,1,rep,name=required,proto3" json:"required,omitempty"`
	// only one of these needs to return a response for the site to be
	// considered qualified
	Optional             []string `protobuf:"bytes,2,rep,name=optional,proto3" json:"optional,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QualifyRequest) Reset()         { *m = QualifyRequest{} }
func (m *QualifyRequest) String() string { return proto.CompactTextString(m) }
func (*QualifyRequest) ProtoMessage()    {}
func (*QualifyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_mortar_b530059dc25ca2c1, []int{0}
}
func (m *QualifyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QualifyRequest.Unmarshal(m, b)
}
func (m *QualifyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QualifyRequest.Marshal(b, m, deterministic)
}
func (dst *QualifyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QualifyRequest.Merge(dst, src)
}
func (m *QualifyRequest) XXX_Size() int {
	return xxx_messageInfo_QualifyRequest.Size(m)
}
func (m *QualifyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QualifyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QualifyRequest proto.InternalMessageInfo

func (m *QualifyRequest) GetRequired() []string {
	if m != nil {
		return m.Required
	}
	return nil
}

func (m *QualifyRequest) GetOptional() []string {
	if m != nil {
		return m.Optional
	}
	return nil
}

type QualifyResponse struct {
	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// list of sitenames
	Sites                []string `protobuf:"bytes,2,rep,name=sites,proto3" json:"sites,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QualifyResponse) Reset()         { *m = QualifyResponse{} }
func (m *QualifyResponse) String() string { return proto.CompactTextString(m) }
func (*QualifyResponse) ProtoMessage()    {}
func (*QualifyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_mortar_b530059dc25ca2c1, []int{1}
}
func (m *QualifyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QualifyResponse.Unmarshal(m, b)
}
func (m *QualifyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QualifyResponse.Marshal(b, m, deterministic)
}
func (dst *QualifyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QualifyResponse.Merge(dst, src)
}
func (m *QualifyResponse) XXX_Size() int {
	return xxx_messageInfo_QualifyResponse.Size(m)
}
func (m *QualifyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QualifyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QualifyResponse proto.InternalMessageInfo

func (m *QualifyResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *QualifyResponse) GetSites() []string {
	if m != nil {
		return m.Sites
	}
	return nil
}

type FetchRequest struct {
	// the list of sites to execute against
	Sites []string `protobuf:"bytes,1,rep,name=sites,proto3" json:"sites,omitempty"`
	// list of streams to download
	Streams []*Stream `protobuf:"bytes,2,rep,name=streams,proto3" json:"streams,omitempty"`
	// temporal parameters for all streams
	// (range of data to download, resolution)
	Time                 *TimeParams `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *FetchRequest) Reset()         { *m = FetchRequest{} }
func (m *FetchRequest) String() string { return proto.CompactTextString(m) }
func (*FetchRequest) ProtoMessage()    {}
func (*FetchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_mortar_b530059dc25ca2c1, []int{2}
}
func (m *FetchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchRequest.Unmarshal(m, b)
}
func (m *FetchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchRequest.Marshal(b, m, deterministic)
}
func (dst *FetchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchRequest.Merge(dst, src)
}
func (m *FetchRequest) XXX_Size() int {
	return xxx_messageInfo_FetchRequest.Size(m)
}
func (m *FetchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchRequest proto.InternalMessageInfo

func (m *FetchRequest) GetSites() []string {
	if m != nil {
		return m.Sites
	}
	return nil
}

func (m *FetchRequest) GetStreams() []*Stream {
	if m != nil {
		return m.Streams
	}
	return nil
}

func (m *FetchRequest) GetTime() *TimeParams {
	if m != nil {
		return m.Time
	}
	return nil
}

type Stream struct {
	// name of the stream
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Brick query (alternative)
	Definition string   `protobuf:"bytes,2,opt,name=definition,proto3" json:"definition,omitempty"`
	DataVars   []string `protobuf:"bytes,6,rep,name=dataVars,proto3" json:"dataVars,omitempty"`
	// list of stream UUIDs
	Uuids []string `protobuf:"bytes,3,rep,name=uuids,proto3" json:"uuids,omitempty"`
	// aggregation function for this stream
	Aggregation AggFunc `protobuf:"varint,4,opt,name=aggregation,proto3,enum=mortar.AggFunc" json:"aggregation,omitempty"`
	// engineering units to convert the stream to
	Units                string   `protobuf:"bytes,5,opt,name=units,proto3" json:"units,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stream) Reset()         { *m = Stream{} }
func (m *Stream) String() string { return proto.CompactTextString(m) }
func (*Stream) ProtoMessage()    {}
func (*Stream) Descriptor() ([]byte, []int) {
	return fileDescriptor_mortar_b530059dc25ca2c1, []int{3}
}
func (m *Stream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stream.Unmarshal(m, b)
}
func (m *Stream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stream.Marshal(b, m, deterministic)
}
func (dst *Stream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stream.Merge(dst, src)
}
func (m *Stream) XXX_Size() int {
	return xxx_messageInfo_Stream.Size(m)
}
func (m *Stream) XXX_DiscardUnknown() {
	xxx_messageInfo_Stream.DiscardUnknown(m)
}

var xxx_messageInfo_Stream proto.InternalMessageInfo

func (m *Stream) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Stream) GetDefinition() string {
	if m != nil {
		return m.Definition
	}
	return ""
}

func (m *Stream) GetDataVars() []string {
	if m != nil {
		return m.DataVars
	}
	return nil
}

func (m *Stream) GetUuids() []string {
	if m != nil {
		return m.Uuids
	}
	return nil
}

func (m *Stream) GetAggregation() AggFunc {
	if m != nil {
		return m.Aggregation
	}
	return AggFunc_AGG_FUNC_INVALID
}

func (m *Stream) GetUnits() string {
	if m != nil {
		return m.Units
	}
	return ""
}

type FetchResponse struct {
	// error from backend
	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// stream definition fields:
	// - site name
	// - variable name (from Stream definition)
	Site       string `protobuf:"bytes,2,opt,name=site,proto3" json:"site,omitempty"`
	Variable   string `protobuf:"bytes,3,opt,name=variable,proto3" json:"variable,omitempty"`
	Identifier string `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// timestamps and value should have same length
	Times  []int64   `protobuf:"varint,5,rep,packed,name=times,proto3" json:"times,omitempty"`
	Values []float64 `protobuf:"fixed64,6,rep,packed,name=values,proto3" json:"values,omitempty"`
	// brick query contents related to this variable
	Triples              []*Triple `protobuf:"bytes,7,rep,name=triples,proto3" json:"triples,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *FetchResponse) Reset()         { *m = FetchResponse{} }
func (m *FetchResponse) String() string { return proto.CompactTextString(m) }
func (*FetchResponse) ProtoMessage()    {}
func (*FetchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_mortar_b530059dc25ca2c1, []int{4}
}
func (m *FetchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchResponse.Unmarshal(m, b)
}
func (m *FetchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchResponse.Marshal(b, m, deterministic)
}
func (dst *FetchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchResponse.Merge(dst, src)
}
func (m *FetchResponse) XXX_Size() int {
	return xxx_messageInfo_FetchResponse.Size(m)
}
func (m *FetchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchResponse proto.InternalMessageInfo

func (m *FetchResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *FetchResponse) GetSite() string {
	if m != nil {
		return m.Site
	}
	return ""
}

func (m *FetchResponse) GetVariable() string {
	if m != nil {
		return m.Variable
	}
	return ""
}

func (m *FetchResponse) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *FetchResponse) GetTimes() []int64 {
	if m != nil {
		return m.Times
	}
	return nil
}

func (m *FetchResponse) GetValues() []float64 {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *FetchResponse) GetTriples() []*Triple {
	if m != nil {
		return m.Triples
	}
	return nil
}

type Triple struct {
	Subject              *URI     `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Predicate            *URI     `protobuf:"bytes,2,opt,name=predicate,proto3" json:"predicate,omitempty"`
	Object               *URI     `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Triple) Reset()         { *m = Triple{} }
func (m *Triple) String() string { return proto.CompactTextString(m) }
func (*Triple) ProtoMessage()    {}
func (*Triple) Descriptor() ([]byte, []int) {
	return fileDescriptor_mortar_b530059dc25ca2c1, []int{5}
}
func (m *Triple) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Triple.Unmarshal(m, b)
}
func (m *Triple) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Triple.Marshal(b, m, deterministic)
}
func (dst *Triple) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Triple.Merge(dst, src)
}
func (m *Triple) XXX_Size() int {
	return xxx_messageInfo_Triple.Size(m)
}
func (m *Triple) XXX_DiscardUnknown() {
	xxx_messageInfo_Triple.DiscardUnknown(m)
}

var xxx_messageInfo_Triple proto.InternalMessageInfo

func (m *Triple) GetSubject() *URI {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Triple) GetPredicate() *URI {
	if m != nil {
		return m.Predicate
	}
	return nil
}

func (m *Triple) GetObject() *URI {
	if m != nil {
		return m.Object
	}
	return nil
}

type URI struct {
	// full URI
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *URI) Reset()         { *m = URI{} }
func (m *URI) String() string { return proto.CompactTextString(m) }
func (*URI) ProtoMessage()    {}
func (*URI) Descriptor() ([]byte, []int) {
	return fileDescriptor_mortar_b530059dc25ca2c1, []int{6}
}
func (m *URI) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_URI.Unmarshal(m, b)
}
func (m *URI) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_URI.Marshal(b, m, deterministic)
}
func (dst *URI) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URI.Merge(dst, src)
}
func (m *URI) XXX_Size() int {
	return xxx_messageInfo_URI.Size(m)
}
func (m *URI) XXX_DiscardUnknown() {
	xxx_messageInfo_URI.DiscardUnknown(m)
}

var xxx_messageInfo_URI proto.InternalMessageInfo

func (m *URI) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *URI) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type TimeParams struct {
	Start                string   `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End                  string   `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	Window               string   `protobuf:"bytes,3,opt,name=window,proto3" json:"window,omitempty"`
	Aligned              bool     `protobuf:"varint,4,opt,name=aligned,proto3" json:"aligned,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimeParams) Reset()         { *m = TimeParams{} }
func (m *TimeParams) String() string { return proto.CompactTextString(m) }
func (*TimeParams) ProtoMessage()    {}
func (*TimeParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_mortar_b530059dc25ca2c1, []int{7}
}
func (m *TimeParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeParams.Unmarshal(m, b)
}
func (m *TimeParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeParams.Marshal(b, m, deterministic)
}
func (dst *TimeParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeParams.Merge(dst, src)
}
func (m *TimeParams) XXX_Size() int {
	return xxx_messageInfo_TimeParams.Size(m)
}
func (m *TimeParams) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeParams.DiscardUnknown(m)
}

var xxx_messageInfo_TimeParams proto.InternalMessageInfo

func (m *TimeParams) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *TimeParams) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *TimeParams) GetWindow() string {
	if m != nil {
		return m.Window
	}
	return ""
}

func (m *TimeParams) GetAligned() bool {
	if m != nil {
		return m.Aligned
	}
	return false
}

func init() {
	proto.RegisterType((*QualifyRequest)(nil), "mortar.QualifyRequest")
	proto.RegisterType((*QualifyResponse)(nil), "mortar.QualifyResponse")
	proto.RegisterType((*FetchRequest)(nil), "mortar.FetchRequest")
	proto.RegisterType((*Stream)(nil), "mortar.Stream")
	proto.RegisterType((*FetchResponse)(nil), "mortar.FetchResponse")
	proto.RegisterType((*Triple)(nil), "mortar.Triple")
	proto.RegisterType((*URI)(nil), "mortar.URI")
	proto.RegisterType((*TimeParams)(nil), "mortar.TimeParams")
	proto.RegisterEnum("mortar.AggFunc", AggFunc_name, AggFunc_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MortarClient is the client API for Mortar service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MortarClient interface {
	// identify which sites meet the requirements of the queries
	Qualify(ctx context.Context, in *QualifyRequest, opts ...grpc.CallOption) (*QualifyResponse, error)
	// pull data from Mortar
	Fetch(ctx context.Context, in *FetchRequest, opts ...grpc.CallOption) (Mortar_FetchClient, error)
}

type mortarClient struct {
	cc *grpc.ClientConn
}

func NewMortarClient(cc *grpc.ClientConn) MortarClient {
	return &mortarClient{cc}
}

func (c *mortarClient) Qualify(ctx context.Context, in *QualifyRequest, opts ...grpc.CallOption) (*QualifyResponse, error) {
	out := new(QualifyResponse)
	err := c.cc.Invoke(ctx, "/mortar.Mortar/Qualify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mortarClient) Fetch(ctx context.Context, in *FetchRequest, opts ...grpc.CallOption) (Mortar_FetchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Mortar_serviceDesc.Streams[0], "/mortar.Mortar/Fetch", opts...)
	if err != nil {
		return nil, err
	}
	x := &mortarFetchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Mortar_FetchClient interface {
	Recv() (*FetchResponse, error)
	grpc.ClientStream
}

type mortarFetchClient struct {
	grpc.ClientStream
}

func (x *mortarFetchClient) Recv() (*FetchResponse, error) {
	m := new(FetchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MortarServer is the server API for Mortar service.
type MortarServer interface {
	// identify which sites meet the requirements of the queries
	Qualify(context.Context, *QualifyRequest) (*QualifyResponse, error)
	// pull data from Mortar
	Fetch(*FetchRequest, Mortar_FetchServer) error
}

func RegisterMortarServer(s *grpc.Server, srv MortarServer) {
	s.RegisterService(&_Mortar_serviceDesc, srv)
}

func _Mortar_Qualify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QualifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MortarServer).Qualify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mortar.Mortar/Qualify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MortarServer).Qualify(ctx, req.(*QualifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mortar_Fetch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FetchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MortarServer).Fetch(m, &mortarFetchServer{stream})
}

type Mortar_FetchServer interface {
	Send(*FetchResponse) error
	grpc.ServerStream
}

type mortarFetchServer struct {
	grpc.ServerStream
}

func (x *mortarFetchServer) Send(m *FetchResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Mortar_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mortar.Mortar",
	HandlerType: (*MortarServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Qualify",
			Handler:    _Mortar_Qualify_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Fetch",
			Handler:       _Mortar_Fetch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "mortar.proto",
}

func init() { proto.RegisterFile("mortar.proto", fileDescriptor_mortar_b530059dc25ca2c1) }

var fileDescriptor_mortar_b530059dc25ca2c1 = []byte{
	// 644 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0xdd, 0x6e, 0xd3, 0x4a,
	0x10, 0x3e, 0xae, 0x13, 0xa7, 0x99, 0xb4, 0xa9, 0xcf, 0xa8, 0xa7, 0xc7, 0xaa, 0x8e, 0x8e, 0x22,
	0x23, 0x50, 0xe0, 0xa2, 0x82, 0x20, 0x21, 0x81, 0xc4, 0x45, 0x28, 0xb4, 0x44, 0x22, 0x01, 0xb6,
	0x4d, 0x41, 0xdc, 0x54, 0x9b, 0x78, 0x13, 0x16, 0x25, 0xb6, 0xbb, 0x5e, 0xb7, 0x42, 0x42, 0xe2,
	0x0d, 0x78, 0x1d, 0x9e, 0x82, 0x77, 0x42, 0xfb, 0xe7, 0x26, 0xad, 0xc4, 0x9d, 0xbf, 0xef, 0x9b,
	0x99, 0xcc, 0x7c, 0x33, 0x59, 0xd8, 0x5a, 0x66, 0x42, 0x52, 0x71, 0x90, 0x8b, 0x4c, 0x66, 0x18,
	0x18, 0x14, 0xbf, 0x86, 0xf6, 0xfb, 0x92, 0x2e, 0xf8, 0xec, 0x2b, 0x61, 0x17, 0x25, 0x2b, 0x24,
	0xee, 0xc3, 0xa6, 0x60, 0x17, 0x25, 0x17, 0x2c, 0x89, 0xbc, 0x8e, 0xdf, 0x6d, 0x92, 0x0a, 0x2b,
	0x2d, 0xcb, 0x25, 0xcf, 0x52, 0xba, 0x88, 0x36, 0x8c, 0xe6, 0x70, 0xfc, 0x1c, 0x76, 0xaa, 0x4a,
	0x45, 0x9e, 0xa5, 0x05, 0xc3, 0x5d, 0xa8, 0x33, 0x21, 0x32, 0x11, 0x79, 0x1d, 0xaf, 0xdb, 0x24,
	0x06, 0x28, 0xb6, 0xe0, 0x92, 0x15, 0xb6, 0x82, 0x01, 0xf1, 0x25, 0x6c, 0x1d, 0x31, 0x39, 0xfd,
	0xec, 0xda, 0xa8, 0xa2, 0xbc, 0x95, 0x28, 0xec, 0x42, 0xa3, 0x90, 0x82, 0xd1, 0xa5, 0xc9, 0x6e,
	0xf5, 0xda, 0x07, 0x76, 0xac, 0x13, 0x4d, 0x13, 0x27, 0xe3, 0x3d, 0xa8, 0x49, 0xbe, 0x64, 0x91,
	0xdf, 0xf1, 0xba, 0xad, 0x1e, 0xba, 0xb0, 0x53, 0xbe, 0x64, 0xef, 0xa8, 0xa0, 0xcb, 0x82, 0x68,
	0x3d, 0xfe, 0xe9, 0x41, 0x60, 0x72, 0x11, 0xa1, 0x96, 0xd2, 0x25, 0xb3, 0xdd, 0xea, 0x6f, 0xfc,
	0x1f, 0x20, 0x61, 0x33, 0x9e, 0x72, 0x35, 0x65, 0xb4, 0xa1, 0x95, 0x15, 0x46, 0x39, 0x92, 0x50,
	0x49, 0xcf, 0xa8, 0x28, 0xa2, 0xc0, 0x38, 0xe2, 0xb0, 0x1a, 0xa1, 0x2c, 0x79, 0x52, 0x44, 0xbe,
	0x19, 0x41, 0x03, 0x7c, 0x04, 0x2d, 0x3a, 0x9f, 0x0b, 0x36, 0xa7, 0xba, 0x64, 0xad, 0xe3, 0x75,
	0xdb, 0xbd, 0x1d, 0xd7, 0x5f, 0x7f, 0x3e, 0x3f, 0x2a, 0xd3, 0x29, 0x59, 0x8d, 0xd1, 0x85, 0x52,
	0x2e, 0x8b, 0xa8, 0x6e, 0x7c, 0xd4, 0x20, 0xfe, 0xe5, 0xc1, 0xb6, 0xb5, 0xec, 0x8f, 0x7e, 0x23,
	0xd4, 0x94, 0x79, 0xb6, 0x79, 0xfd, 0xad, 0xda, 0xbe, 0xa4, 0x82, 0xd3, 0xc9, 0xc2, 0x38, 0xd4,
	0x24, 0x15, 0x56, 0x23, 0xf3, 0x84, 0xa5, 0x92, 0xcf, 0x38, 0x13, 0xba, 0xbf, 0x26, 0x59, 0x61,
	0xd4, 0xaf, 0x28, 0xe7, 0x54, 0x37, 0x7e, 0xd7, 0x27, 0x06, 0xe0, 0x1e, 0x04, 0x97, 0x74, 0x51,
	0x32, 0x63, 0x83, 0x47, 0x2c, 0x52, 0x1b, 0x93, 0x82, 0xe7, 0x0b, 0x56, 0x44, 0x8d, 0xf5, 0x8d,
	0x9d, 0x6a, 0x9a, 0x38, 0x39, 0xfe, 0x0e, 0x81, 0xa1, 0xf0, 0x2e, 0x34, 0x8a, 0x72, 0xf2, 0x85,
	0x4d, 0xa5, 0x9e, 0xa4, 0xd5, 0x6b, 0xb9, 0x9c, 0x31, 0x19, 0x10, 0xa7, 0xe1, 0x7d, 0x68, 0xe6,
	0x82, 0x25, 0x7c, 0x4a, 0xed, 0x74, 0x37, 0x02, 0xaf, 0x55, 0xbc, 0x03, 0x41, 0x66, 0x0a, 0xfa,
	0xb7, 0xe3, 0xac, 0x14, 0x3f, 0x05, 0x7f, 0x4c, 0x06, 0xf8, 0x1f, 0x34, 0xd5, 0xea, 0x8b, 0x9c,
	0x4e, 0xdd, 0x2d, 0x5c, 0x13, 0x6a, 0x7a, 0x3d, 0x99, 0xb5, 0xd3, 0x80, 0x78, 0x06, 0x70, 0x7d,
	0x59, 0xfa, 0x76, 0x25, 0x15, 0xd2, 0xed, 0x41, 0x03, 0x0c, 0xc1, 0x67, 0x69, 0x62, 0xf3, 0xd4,
	0xa7, 0xf2, 0xec, 0x8a, 0xa7, 0x49, 0x76, 0x65, 0x77, 0x60, 0x11, 0x46, 0xd0, 0xa0, 0x0b, 0x3e,
	0x4f, 0x59, 0xa2, 0xed, 0xdf, 0x24, 0x0e, 0x3e, 0xf8, 0xe1, 0x41, 0xc3, 0x9e, 0x08, 0xee, 0x42,
	0xd8, 0x3f, 0x3e, 0x3e, 0x3f, 0x1a, 0x8f, 0x0e, 0xcf, 0x07, 0xa3, 0xb3, 0xfe, 0x9b, 0xc1, 0xcb,
	0xf0, 0x2f, 0x0c, 0x61, 0xab, 0x62, 0x49, 0xff, 0x43, 0xe8, 0xe1, 0xdf, 0xb0, 0x5d, 0x31, 0xc3,
	0x57, 0xfd, 0x51, 0xb8, 0xb1, 0x16, 0x34, 0x1c, 0x8c, 0x42, 0x7f, 0x9d, 0xe9, 0x7f, 0x0c, 0x6b,
	0x88, 0xd0, 0xae, 0x98, 0xc3, 0xb7, 0xe3, 0xd1, 0x69, 0x58, 0x5f, 0x8b, 0x3a, 0x19, 0x0f, 0xc3,
	0xa0, 0xf7, 0x0d, 0x82, 0xa1, 0x76, 0x12, 0x9f, 0x41, 0xc3, 0xfe, 0xff, 0x71, 0xcf, 0xb9, 0xbb,
	0xfe, 0xb4, 0xec, 0xff, 0x7b, 0x8b, 0xb7, 0x87, 0xfb, 0x04, 0xea, 0xfa, 0x92, 0x71, 0xd7, 0x45,
	0xac, 0xbe, 0x05, 0xfb, 0xff, 0xdc, 0x60, 0x4d, 0xd6, 0x43, 0xef, 0x05, 0x7c, 0xda, 0x34, 0x4a,
	0x3e, 0x99, 0x04, 0xfa, 0x61, 0x7b, 0xfc, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x4a, 0x01, 0x61, 0xbf,
	0xe8, 0x04, 0x00, 0x00,
}
